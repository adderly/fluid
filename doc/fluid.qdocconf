include(defaults.qdocconf)

project                 = Fluid
description             = Fluid Reference Documentation
version                 = $FLUID_VERSION

qhp.projects            = Fluid

qhp.Fluid.file          = fluid.qhp
qhp.Fluid.namespace     = org.qmlos.fluid.$FLUID_VERSION_TAG
qhp.Fluid.virtualFolder = fluid
qhp.Fluid.indexTitle    = Fluid
qhp.Fluid.indexRoot     =

qhp.Fluid.filterAttributes                  = fluid $FLUID_VERSION qtrefdoc
qhp.Fluid.customFilters.Qt.name             = Fluid $FLUID_VERSION
qhp.Fluid.customFilters.Qt.filterAttributes = fluid $FLUID_VERSION

qhp.Fluid.subprojects = qmltypes classes examples
qhp.Fluid.subprojects.qmltypes.title = QML Types
qhp.Fluid.subprojects.qmltypes.indexTitle = Fluid QML Types
qhp.Fluid.subprojects.qmltypes.selectors = qmlclass
qhp.Fluid.subprojects.qmltypes.sortPages = true
qhp.Fluid.subprojects.classes.title = C++ Classes
qhp.Fluid.subprojects.classes.indexTitle = Fluid C++ Classes
qhp.Fluid.subprojects.classes.selectors = class fake:headerfile
qhp.Fluid.subprojects.classes.sortPages = true
qhp.Fluid.subprojects.examples.title = Examples
qhp.Fluid.subprojects.examples.indexTitle = Fluid Examples
qhp.Fluid.subprojects.examples.selectors = fake:example

depends = qtcore qtgui qtdoc qtqml qtquick qtquickdialogs qtquickcontrols qtquickextras qmake qtsql qtwidgets

# Specify the install path under QT_INSTALL_EXAMPLES
# Note: paths passed to \example command must contain the parent directory, e.g.
# \example controls/tabs
exampledirs += snippets

examplesinstallpath = fluid

headerdirs += ..

sourcedirs += ..

imagedirs += images

navigation.landingpage  = "Fluid"
navigation.qmltypespage = "Fluid QML Types"
navigation.cppclassespage = "Fluid C++ Classes"

tagfile                 = fluid.tags

# \styleimport {QtQuick.Controls.Universal 2.0}
macro.styleimport.HTML = "<table class=\"alignedsummary\"><tbody><tr><td class=\"memItemLeft rightAlign topAlign\"> Import Statement:</td><td class=\"memItemRight bottomAlign\"> import \1</td></tr><tr><td class=\"memItemLeft rightAlign topAlign\"> Since:</td><td class=\"memItemRight bottomAlign\"> \2</td></tr></tbody></table>"

# \styleproperty {Universal.accent} {enumeration} {html-target-id}
# \target html-target-id
# This property holds ...
# (empty line)
# \endstyleproperty
macro.styleproperty.HTML = "<div class=\"qmlproto\"><table class=\"qmlname\"><tbody><tr valign=\"top\" class=\"odd\" id=\"\3\"><td class=\"tblQmlPropNode\"><p><span class=\"name\">\1</span> : <span class=\"type\">\2</span></p></td></tr></tbody></table></div>"
macro.endstyleproperty = "\\br"

# \stylemethod {returntype} {methodname} {argtype} {argname} {html-target-id}
# \target html-target-id
# This property holds ...
# (empty line)
# \endstylemethod
macro.stylemethod.HTML = "<div class=\"qmlproto\"><table class=\"qmlname\"><tbody><tr valign=\"top\" class=\"odd\" id=\"\5\"><td class=\"tblQmlFuncNode\"><p><span class=\"type\">\1</span> <span class=\"name\">\2</span>(<span class="type">\3</span> <i>\4</i>)</p></td></tr></tbody></table></div>"
macro.endstylemethod = "\\br"

# \stylecolor {#6A00FF} {(default)}
macro.stylecolor.HTML = "<div style=\"padding:10px;color:#fff;background:\1;\">\1 \2</div>"

macro.nbsp.HTML = "&nbsp;"
macro.labs = "\\note \\e{Types in Qt.labs modules are not guaranteed to remain compatible in future versions.}"

#Add output suffix to the html filenames
outputsuffixes = QML
outputsuffixes.QML = 2
